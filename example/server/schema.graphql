# Schema generated by Grats (https://grats.capt.dev)
# Do not manually edit. Regenerate by running `npx grats`.
"""
Indicates that a position is semantically non null: it is only null if there is a matching error in the `errors` array.
In all other cases, the position is non-null.

Tools doing code generation may use this information to generate the position as non-null if field errors are handled out of band:

```graphql
type User {
    # email is semantically non-null and can be generated as non-null by error-handling clients.
    email: String @semanticNonNull
}
```

The `levels` argument indicates what levels are semantically non null in case of lists:

```graphql
type User {
    # friends is semantically non null
    friends: [User] @semanticNonNull # same as @semanticNonNull(levels: [0])

    # every friends[k] is semantically non null
    friends: [User] @semanticNonNull(levels: [1])

    # friends as well as every friends[k] is semantically non null
    friends: [User] @semanticNonNull(levels: [0, 1])
}
```

`levels` are zero indexed.
Passing a negative level or a level greater than the list dimension is an error.
"""
directive @semanticNonNull(levels: [Int] = [0]) on FIELD_DEFINITION

"""Models the current users's news feed."""
type Feed {
  posts: [Post!] @semanticNonNull
}

type Post {
  author: User @semanticNonNull
  content: String @semanticNonNull
  id: String @semanticNonNull
  title: String @semanticNonNull
}

type Query {
  viewer: Viewer @semanticNonNull
}

type User {
  name: String @semanticNonNull
}

"""
Models the currently logged in user. Values which are specific to the current
user are exposed here.
"""
type Viewer {
  feed: Feed @semanticNonNull
  user: User @semanticNonNull
}
